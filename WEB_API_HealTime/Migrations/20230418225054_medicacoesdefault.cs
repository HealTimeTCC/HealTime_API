using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace WEB_API_HealTime.Migrations
{
    /// <inheritdoc />
    public partial class medicacoesdefault : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "ContatoPessoas",
                keyColumn: "PessoaId",
                keyValue: 1,
                column: "CriadoEm",
                value: new DateTime(2023, 4, 18, 19, 50, 54, 272, DateTimeKind.Local).AddTicks(4678));

            migrationBuilder.InsertData(
                table: "Medicacoes",
                columns: new[] { "MedicacaoId", "CompostoAtivoMedicacao", "Generico", "LaboratorioMedicaocao", "NomeMedicacao", "StatusMedicacao", "TipoMedicacaoId" },
                values: new object[,]
                {
                    { 1, "pirazolônico não narcótico ", "S", "Algum por ai", "DIPIRONA 300ml", 1, 1 },
                    { 2, "EXEMPLO ", "N", "Algum outro por ai", "EXEMPLO", 1, 2 }
                });

            migrationBuilder.UpdateData(
                table: "Pessoas",
                keyColumn: "PessoaId",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 15, 22, 155, 167, 2, 238, 117, 212, 164, 155, 178, 201, 186, 160, 20, 33, 162, 136, 11, 192, 81, 97, 153, 238, 47, 229, 54, 93, 139, 42, 134, 7, 166, 76, 70, 223, 88, 135, 235, 55, 82, 98, 62, 46, 174, 121, 62, 73, 123, 218, 27, 186, 84, 200, 60, 9, 38, 131, 252, 179, 115, 72, 180, 159 }, new byte[] { 35, 158, 66, 55, 230, 0, 107, 128, 121, 84, 38, 142, 57, 110, 118, 76, 210, 84, 91, 96, 29, 79, 228, 163, 186, 108, 148, 147, 74, 140, 105, 67, 149, 174, 154, 135, 68, 149, 121, 53, 253, 148, 167, 52, 15, 5, 203, 41, 189, 159, 100, 189, 172, 153, 84, 118, 16, 207, 2, 128, 136, 235, 193, 119, 152, 223, 199, 201, 188, 155, 187, 64, 49, 148, 34, 232, 224, 240, 185, 175, 103, 252, 159, 200, 64, 4, 199, 88, 233, 243, 175, 4, 234, 231, 121, 20, 198, 163, 165, 117, 3, 211, 101, 50, 39, 85, 155, 196, 111, 168, 52, 25, 236, 223, 101, 202, 174, 52, 49, 25, 241, 203, 38, 158, 100, 131, 96, 18 } });

            migrationBuilder.UpdateData(
                table: "Pessoas",
                keyColumn: "PessoaId",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 15, 22, 155, 167, 2, 238, 117, 212, 164, 155, 178, 201, 186, 160, 20, 33, 162, 136, 11, 192, 81, 97, 153, 238, 47, 229, 54, 93, 139, 42, 134, 7, 166, 76, 70, 223, 88, 135, 235, 55, 82, 98, 62, 46, 174, 121, 62, 73, 123, 218, 27, 186, 84, 200, 60, 9, 38, 131, 252, 179, 115, 72, 180, 159 }, new byte[] { 35, 158, 66, 55, 230, 0, 107, 128, 121, 84, 38, 142, 57, 110, 118, 76, 210, 84, 91, 96, 29, 79, 228, 163, 186, 108, 148, 147, 74, 140, 105, 67, 149, 174, 154, 135, 68, 149, 121, 53, 253, 148, 167, 52, 15, 5, 203, 41, 189, 159, 100, 189, 172, 153, 84, 118, 16, 207, 2, 128, 136, 235, 193, 119, 152, 223, 199, 201, 188, 155, 187, 64, 49, 148, 34, 232, 224, 240, 185, 175, 103, 252, 159, 200, 64, 4, 199, 88, 233, 243, 175, 4, 234, 231, 121, 20, 198, 163, 165, 117, 3, 211, 101, 50, 39, 85, 155, 196, 111, 168, 52, 25, 236, 223, 101, 202, 174, 52, 49, 25, 241, 203, 38, 158, 100, 131, 96, 18 } });

            migrationBuilder.UpdateData(
                table: "Pessoas",
                keyColumn: "PessoaId",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 15, 22, 155, 167, 2, 238, 117, 212, 164, 155, 178, 201, 186, 160, 20, 33, 162, 136, 11, 192, 81, 97, 153, 238, 47, 229, 54, 93, 139, 42, 134, 7, 166, 76, 70, 223, 88, 135, 235, 55, 82, 98, 62, 46, 174, 121, 62, 73, 123, 218, 27, 186, 84, 200, 60, 9, 38, 131, 252, 179, 115, 72, 180, 159 }, new byte[] { 35, 158, 66, 55, 230, 0, 107, 128, 121, 84, 38, 142, 57, 110, 118, 76, 210, 84, 91, 96, 29, 79, 228, 163, 186, 108, 148, 147, 74, 140, 105, 67, 149, 174, 154, 135, 68, 149, 121, 53, 253, 148, 167, 52, 15, 5, 203, 41, 189, 159, 100, 189, 172, 153, 84, 118, 16, 207, 2, 128, 136, 235, 193, 119, 152, 223, 199, 201, 188, 155, 187, 64, 49, 148, 34, 232, 224, 240, 185, 175, 103, 252, 159, 200, 64, 4, 199, 88, 233, 243, 175, 4, 234, 231, 121, 20, 198, 163, 165, 117, 3, 211, 101, 50, 39, 85, 155, 196, 111, 168, 52, 25, 236, 223, 101, 202, 174, 52, 49, 25, 241, 203, 38, 158, 100, 131, 96, 18 } });

            migrationBuilder.UpdateData(
                table: "Pessoas",
                keyColumn: "PessoaId",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 15, 22, 155, 167, 2, 238, 117, 212, 164, 155, 178, 201, 186, 160, 20, 33, 162, 136, 11, 192, 81, 97, 153, 238, 47, 229, 54, 93, 139, 42, 134, 7, 166, 76, 70, 223, 88, 135, 235, 55, 82, 98, 62, 46, 174, 121, 62, 73, 123, 218, 27, 186, 84, 200, 60, 9, 38, 131, 252, 179, 115, 72, 180, 159 }, new byte[] { 35, 158, 66, 55, 230, 0, 107, 128, 121, 84, 38, 142, 57, 110, 118, 76, 210, 84, 91, 96, 29, 79, 228, 163, 186, 108, 148, 147, 74, 140, 105, 67, 149, 174, 154, 135, 68, 149, 121, 53, 253, 148, 167, 52, 15, 5, 203, 41, 189, 159, 100, 189, 172, 153, 84, 118, 16, 207, 2, 128, 136, 235, 193, 119, 152, 223, 199, 201, 188, 155, 187, 64, 49, 148, 34, 232, 224, 240, 185, 175, 103, 252, 159, 200, 64, 4, 199, 88, 233, 243, 175, 4, 234, 231, 121, 20, 198, 163, 165, 117, 3, 211, 101, 50, 39, 85, 155, 196, 111, 168, 52, 25, 236, 223, 101, 202, 174, 52, 49, 25, 241, 203, 38, 158, 100, 131, 96, 18 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Medicacoes",
                keyColumn: "MedicacaoId",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "Medicacoes",
                keyColumn: "MedicacaoId",
                keyValue: 2);

            migrationBuilder.UpdateData(
                table: "ContatoPessoas",
                keyColumn: "PessoaId",
                keyValue: 1,
                column: "CriadoEm",
                value: new DateTime(2023, 4, 18, 19, 25, 29, 324, DateTimeKind.Local).AddTicks(6896));

            migrationBuilder.UpdateData(
                table: "Pessoas",
                keyColumn: "PessoaId",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 53, 21, 15, 166, 93, 84, 201, 200, 93, 228, 71, 215, 128, 144, 120, 98, 34, 101, 67, 4, 156, 27, 27, 175, 16, 121, 157, 67, 198, 162, 254, 44, 30, 234, 40, 66, 117, 41, 148, 94, 163, 224, 251, 56, 129, 222, 58, 57, 111, 238, 249, 103, 38, 5, 156, 31, 30, 105, 184, 140, 216, 130, 197, 73 }, new byte[] { 89, 151, 101, 85, 149, 218, 58, 1, 234, 109, 208, 168, 16, 177, 92, 196, 46, 202, 84, 226, 228, 114, 228, 248, 176, 135, 229, 10, 27, 31, 32, 184, 209, 211, 5, 58, 247, 160, 186, 160, 146, 109, 231, 9, 118, 249, 12, 211, 146, 237, 221, 225, 161, 182, 253, 147, 250, 68, 150, 28, 65, 140, 205, 222, 211, 44, 146, 88, 204, 251, 69, 17, 153, 14, 102, 183, 137, 182, 125, 59, 171, 224, 242, 79, 83, 245, 192, 20, 78, 141, 216, 1, 107, 132, 22, 229, 25, 171, 42, 204, 38, 185, 132, 246, 35, 69, 61, 233, 135, 10, 206, 141, 244, 251, 136, 75, 252, 35, 77, 83, 207, 25, 104, 28, 28, 29, 46, 49 } });

            migrationBuilder.UpdateData(
                table: "Pessoas",
                keyColumn: "PessoaId",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 53, 21, 15, 166, 93, 84, 201, 200, 93, 228, 71, 215, 128, 144, 120, 98, 34, 101, 67, 4, 156, 27, 27, 175, 16, 121, 157, 67, 198, 162, 254, 44, 30, 234, 40, 66, 117, 41, 148, 94, 163, 224, 251, 56, 129, 222, 58, 57, 111, 238, 249, 103, 38, 5, 156, 31, 30, 105, 184, 140, 216, 130, 197, 73 }, new byte[] { 89, 151, 101, 85, 149, 218, 58, 1, 234, 109, 208, 168, 16, 177, 92, 196, 46, 202, 84, 226, 228, 114, 228, 248, 176, 135, 229, 10, 27, 31, 32, 184, 209, 211, 5, 58, 247, 160, 186, 160, 146, 109, 231, 9, 118, 249, 12, 211, 146, 237, 221, 225, 161, 182, 253, 147, 250, 68, 150, 28, 65, 140, 205, 222, 211, 44, 146, 88, 204, 251, 69, 17, 153, 14, 102, 183, 137, 182, 125, 59, 171, 224, 242, 79, 83, 245, 192, 20, 78, 141, 216, 1, 107, 132, 22, 229, 25, 171, 42, 204, 38, 185, 132, 246, 35, 69, 61, 233, 135, 10, 206, 141, 244, 251, 136, 75, 252, 35, 77, 83, 207, 25, 104, 28, 28, 29, 46, 49 } });

            migrationBuilder.UpdateData(
                table: "Pessoas",
                keyColumn: "PessoaId",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 53, 21, 15, 166, 93, 84, 201, 200, 93, 228, 71, 215, 128, 144, 120, 98, 34, 101, 67, 4, 156, 27, 27, 175, 16, 121, 157, 67, 198, 162, 254, 44, 30, 234, 40, 66, 117, 41, 148, 94, 163, 224, 251, 56, 129, 222, 58, 57, 111, 238, 249, 103, 38, 5, 156, 31, 30, 105, 184, 140, 216, 130, 197, 73 }, new byte[] { 89, 151, 101, 85, 149, 218, 58, 1, 234, 109, 208, 168, 16, 177, 92, 196, 46, 202, 84, 226, 228, 114, 228, 248, 176, 135, 229, 10, 27, 31, 32, 184, 209, 211, 5, 58, 247, 160, 186, 160, 146, 109, 231, 9, 118, 249, 12, 211, 146, 237, 221, 225, 161, 182, 253, 147, 250, 68, 150, 28, 65, 140, 205, 222, 211, 44, 146, 88, 204, 251, 69, 17, 153, 14, 102, 183, 137, 182, 125, 59, 171, 224, 242, 79, 83, 245, 192, 20, 78, 141, 216, 1, 107, 132, 22, 229, 25, 171, 42, 204, 38, 185, 132, 246, 35, 69, 61, 233, 135, 10, 206, 141, 244, 251, 136, 75, 252, 35, 77, 83, 207, 25, 104, 28, 28, 29, 46, 49 } });

            migrationBuilder.UpdateData(
                table: "Pessoas",
                keyColumn: "PessoaId",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 53, 21, 15, 166, 93, 84, 201, 200, 93, 228, 71, 215, 128, 144, 120, 98, 34, 101, 67, 4, 156, 27, 27, 175, 16, 121, 157, 67, 198, 162, 254, 44, 30, 234, 40, 66, 117, 41, 148, 94, 163, 224, 251, 56, 129, 222, 58, 57, 111, 238, 249, 103, 38, 5, 156, 31, 30, 105, 184, 140, 216, 130, 197, 73 }, new byte[] { 89, 151, 101, 85, 149, 218, 58, 1, 234, 109, 208, 168, 16, 177, 92, 196, 46, 202, 84, 226, 228, 114, 228, 248, 176, 135, 229, 10, 27, 31, 32, 184, 209, 211, 5, 58, 247, 160, 186, 160, 146, 109, 231, 9, 118, 249, 12, 211, 146, 237, 221, 225, 161, 182, 253, 147, 250, 68, 150, 28, 65, 140, 205, 222, 211, 44, 146, 88, 204, 251, 69, 17, 153, 14, 102, 183, 137, 182, 125, 59, 171, 224, 242, 79, 83, 245, 192, 20, 78, 141, 216, 1, 107, 132, 22, 229, 25, 171, 42, 204, 38, 185, 132, 246, 35, 69, 61, 233, 135, 10, 206, 141, 244, 251, 136, 75, 252, 35, 77, 83, 207, 25, 104, 28, 28, 29, 46, 49 } });
        }
    }
}
